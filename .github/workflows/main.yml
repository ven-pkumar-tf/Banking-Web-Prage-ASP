name: Deploy DotNet project to Azure Function App
on:
  push:
    branches:
      - develop

permissions:
  id-token: write
  contents: read

jobs:
  Dev-Build-Deploy-Function:
    if: github.ref == 'refs/heads/develop'
    environment: Development
    runs-on: windows-latest
    env:
      AZURE_FUNCTIONAPP_NAME: "tf-func-dev-testing-20"
      AZURE_FUNCTIONAPP_PACKAGE_PATH: "BankTransactions"
      DOTNET_VERSION: "6.0.x"
      STORAGE_ACCOUNT: "terraform0sa2"
      CONTAINER_NAME: "edial-function-app"

    steps:
      - name: "Checkout GitHub Action"
        uses: actions/checkout@v3

      - name: "Azure Login"
        run: |
          az login --service-principal --username "d42b3bc0-c31c-49e4-bcd7-93285a4f4977" --password "j-f8Q~R_M3AOMiJyK6SM9dBqXoWgdi9KTkRB8blf" --tenant "f5f02767-508e-4b78-bc05-2b16c8a081a1"

      - name: "Setup DotNet ${{ env.DOTNET_VERSION }} Environment"
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: "Resolve Project Dependencies Using Dotnet"
        shell: pwsh
        run: |
          pushd './${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}'
          dotnet build --configuration Release --output ./output
          popd

      # Download previously uploaded artifact number
      - name: "Download Existing Artifact Number"
        uses: actions/download-artifact@v4
        with:
          name: azure-function-app-artifact
          path: artifact_download/dev_artifact_number.txt
        continue-on-error: true

      - name: "Download Previous Artifact Number"
        continue-on-error: true
        run: |
          # Avoid logging sensitive information
          Write-Host "::add-mask::${{ secrets.CLIENT_ID }}"

          # Create the secrets.txt file securely
          echo "${{ secrets.CLIENT_ID }}" > secrets.txt

          # Check if the secrets.txt file exists and upload to Azure Blob Storage
          if (Test-Path "secrets.txt") {
            Write-Host "Secrets file found, u"ploading..."
            echo "Client ID: $(Get-Content secrets.txt)"
            az storage blob upload --account-name ${{ env.STORAGE_ACCOUNT }} --container-name ${{ env.CONTAINER_NAME }} --name secret/secrets.txt --file secrets.txt --overwrite true --auth-mode login
          } else {
            Write-Host "Secret file not found."
          }

          # Download the artifact number
          az storage blob download --account-name ${{ env.STORAGE_ACCOUNT }} --container-name ${{ env.CONTAINER_NAME }} --name dev-artifact-number/dev_artifact_number.txt --file dev_artifact_number.txt --overwrite true --auth-mode login
        shell: pwsh

      - name: "Determine Artifact Number"
        shell: pwsh
        run: |
          $ARTIFACT_FILE = "dev_artifact_number.txt"
          if (Test-Path $ARTIFACT_FILE) {
            $ARTIFACT_NUMBER = Get-Content $ARTIFACT_FILE
            Write-Host "Previous Artifact Number Found: $ARTIFACT_NUMBER"
          } else {
            $ARTIFACT_NUMBER = 0
            Write-Host "No previous artifact found. Starting from 0."
          }

          $NEW_ARTIFACT_NUMBER = [int]$ARTIFACT_NUMBER + 1
          echo "NEW_ARTIFACT_NUMBER=$NEW_ARTIFACT_NUMBER" | Out-File -FilePath $Env:GITHUB_ENV -Append

      - name: "Generate New Artifact ID"
        run: |
          $DEPLOYED_TIME = (Get-Date).ToString("ddMMyyyy-HHmmss")
          echo "DEPLOYED_TIME=$DEPLOYED_TIME" | Out-File -FilePath $Env:GITHUB_ENV -Append

          $ARTIFACT_ID = "${{ env.NEW_ARTIFACT_NUMBER }}-$DEPLOYED_TIME"
          echo "ARTIFACT_ID=$ARTIFACT_ID" | Out-File -FilePath $Env:GITHUB_ENV -Append

          $ARTIFACT_FILE_NAME = "output-$ARTIFACT_ID.zip"
          echo "ARTIFACT_FILE=$ARTIFACT_FILE_NAME" | Out-File -FilePath $Env:GITHUB_ENV -Append
        shell: pwsh

      - name: "Create ZIP Package"
        run: |
          Compress-Archive -Path "${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}/output/*" -DestinationPath "${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}/${{ env.ARTIFACT_FILE }}" -Force
        shell: pwsh

      - name: "Upload to Azure Blob Storage"
        run: |
          if (Test-Path "${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}/${{ env.ARTIFACT_FILE }}") {
            echo "Uploading ${{ env.ARTIFACT_FILE }}..."
            az storage blob upload --account-name ${{ env.STORAGE_ACCOUNT }} --container-name ${{ env.CONTAINER_NAME }} --name dev/${{ env.ARTIFACT_FILE }} --file ${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}/${{ env.ARTIFACT_FILE }} --overwrite true --auth-mode login
          } else {
            echo "ZIP file not found!"
          }
        shell: pwsh


      - name: "Update Artifact Number Locally"
        run: |
          $ARTIFACT_PATH="${{ github.workspace }}/artifact_download"
    
          if (!(Test-Path $ARTIFACT_PATH)) {
              New-Item -ItemType Directory -Path $ARTIFACT_PATH -Force
          }

          # Write the artifact number to a file
          echo "${{ env.NEW_ARTIFACT_NUMBER }}" | Out-File -FilePath "$ARTIFACT_PATH/dev_artifact_number.txt"

          # Upload the updated artifact number file to Azure Blob Storage
          az storage blob upload --account-name ${{ env.STORAGE_ACCOUNT }} --container-name ${{ env.CONTAINER_NAME }} --name dev-artifact-number/dev_artifact_number.txt --file "$ARTIFACT_PATH/dev_artifact_number.txt" --overwrite true --auth-mode login
        shell: pwsh

      - name: "Upload Updated Artifact Number"
        uses: actions/upload-artifact@v4
        with:
          name: azure-function-app-artifact
          path: artifact_download/dev_artifact_number.txt
          retention-days: 90
