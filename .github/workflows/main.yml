name: Deploy DotNet project to Azure Function App
on:
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

jobs:
  Dev-Build-Deploy-Function:
    if: github.ref == 'refs/heads/develop'
    environment: Development
    runs-on: windows-latest
    env:
      AZURE_FUNCTIONAPP_NAME: "tf-func-dev-testing-20"
      AZURE_FUNCTIONAPP_PACKAGE_PATH: "BankTransactions"
      DOTNET_VERSION: "6.0.x"
      STORAGE_ACCOUNT: "terraform0sa1"
      CONTAINER_NAME: "edial-function-app"

    steps:
      - name: "Checkout GitHub Action"
        uses: actions/checkout@v3

      - name: "Azure Login"
        run: |
          az login --service-principal --username "d693b53d-6ea8-4242-81eb-deb5d5ce0f64" --password "Xis8Q~iazO69SeWpjFRKAxYhBUMsjkytfMoSCbFk" --tenant "f5f02767-508e-4b78-bc05-2b16c8a081a1"

      - name: "Setup DotNet ${{ env.DOTNET_VERSION }} Environment"
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: "Resolve Project Dependencies Using Dotnet"
        shell: pwsh
        run: |
          pushd './${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}'
          dotnet build --configuration Release --output ./output
          popd

      - name: "Generate New Artifact ID"
        run: |
          $ISTZone = [System.TimeZoneInfo]::FindSystemTimeZoneById("India Standard Time")
          $DEPLOYED_TIME = [System.TimeZoneInfo]::ConvertTimeFromUtc((Get-Date).ToUniversalTime(), $ISTZone).ToString("ddMMyyyy-HHmmss")
          echo "DEPLOYED_TIME=$DEPLOYED_TIME" | Out-File -FilePath $Env:GITHUB_ENV -Append

          $ARTIFACT_ID = "$DEPLOYED_TIME"
          echo "ARTIFACT_ID=$ARTIFACT_ID" | Out-File -FilePath $Env:GITHUB_ENV -Append

          $ARTIFACT_FILE_NAME = "functionapp-inbound-dev-$ARTIFACT_ID.zip"
          echo "ARTIFACT_FILE=$ARTIFACT_FILE_NAME" | Out-File -FilePath $Env:GITHUB_ENV -Append
        shell: pwsh

      - name: "Create ZIP Package"
        run: |
          Compress-Archive -Path "${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}/*" -DestinationPath "${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}/${{ env.ARTIFACT_FILE }}" -Force
        shell: pwsh

      - name: "Upload to Azure Blob Storage"
        run: |
          if (Test-Path "${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}/${{ env.ARTIFACT_FILE }}") {
            echo "Uploading ${{ env.ARTIFACT_FILE }}..."
            az storage blob upload --account-name ${{ env.STORAGE_ACCOUNT }} --container-name ${{ env.CONTAINER_NAME }} --name dev/${{ env.ARTIFACT_FILE }} --file ${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}/${{ env.ARTIFACT_FILE }} --overwrite true --auth-mode login
          } else {
            echo "ZIP file not found!"
          }
        shell: pwsh
        